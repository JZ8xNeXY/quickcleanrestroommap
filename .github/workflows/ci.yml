name: Continuous Integration

on:
  push:
    branches-ignore:
      - "main"
  workflow_call:

jobs:
  # 処理① eslint(& prettier) のルール違反がないことをチェック
  eslint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19.4.0'

      - name: Install packages
        run: npm install

      - name: Run lint
        run: npm run lint

  # 処理② jest 単体テストの実施
  jest:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19.4.0'
      
      - name: Install packages
        run: npm install

      # テスト用の .env.test ファイルを作成
      - name: Create .env.test file
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" > .env.test
          echo "NEXT_PUBLIC_SUPABASE_API_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_API_KEY }}" >> .env.test

      # Jestテストの実行
      - name: Run Jest tests
        run: npm run test
  
  # 処理③ cypress e2eテストの実施
  cypress:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: next
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19.4.0'
      
      - name: Install packages
        run: npm install

      # テスト用の .env.test ファイルを作成
      - name: Create .env.test file
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" > .env.test
          echo "NEXT_PUBLIC_SUPABASE_API_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_API_KEY }}" >> .env.test
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env.test
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env.test
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env.test
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env.test
          echo "EMAIL=${{ secrets.EMAIL }}" >> .env.test
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> .env.test

      - name: Check .env.test content
        run: cat .env.test
      
      # Next.jsアプリケーションのビルド
      - name: Build Next.js app
        run: npm run build
      
      # プロダクションサーバーをポート8000で起動
      - name: Start production server on port 8000
        run: npm run start -- --port 8000 &

      # Cypressテストの実行
      - name: Run Cypress tests
        run: npm run cypress:headless 