"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utils/RightClickMapHandler.ts":
/*!*******************************************!*\
  !*** ./src/utils/RightClickMapHandler.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RightClickMapHandler: function() { return /* binding */ RightClickMapHandler; }\n/* harmony export */ });\nvar RightClickMapHandler = function RightClickMapHandler(_ref) {\n  var map = _ref.map;\n  map.addListener('rightclick', function (e) {\n    var latitude = e.latLng.lat();\n    var longitude = e.latLng.lng();\n    console.log(latitude, longitude);\n  });\n  var pinViewScaled = new google.maps.marker.PinView({\n    background: '#4CAF50',\n    glyphColor: 'white'\n  });\n\n  // マーカーを作成してマップに追加\n  var marker = new google.maps.marker.AdvancedMarkerElement({\n    position: {\n      lat: latitude,\n      lng: longitude\n    },\n    // 更新された変数名を使用\n    map: map,\n    content: pinViewScaled.element\n  });\n  // 登録画面へのリンクを含む吹き出しを生成\n  var contentString = '<div id=\"infoWindowContent\" style=\"padding: 15px;\">' + '<a href=\"' + baseUrl + '/posts/new?latitude=' + latitude +\n  // ここを `lat` から `latitude` に修正\n  '&longitude=' + longitude +\n  // ここを `lng` から `longitude` に修正\n  '\">ここを登録する</a>' + '</div>';\n  var infowindow = new google.maps.InfoWindow({\n    content: contentString,\n    position: e.latLng\n  });\n  infowindow.open(map, marker);\n\n  // 情報ウィンドウの閉じるボタンがクリックされたらマーカーを削除\n  infowindow.addListener('closeclick', function () {\n    marker.setMap(null);\n  });\n  return marker;\n};\n_c = RightClickMapHandler;\nvar _c;\n$RefreshReg$(_c, \"RightClickMapHandler\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvUmlnaHRDbGlja01hcEhhbmRsZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUlPLElBQU1BLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBb0JBLENBQUFDLElBQUEsRUFBMkM7RUFBQSxJQUFyQ0MsR0FBRyxHQUFBRCxJQUFBLENBQUhDLEdBQUc7RUFDeENBLEdBQUcsQ0FBQ0MsV0FBVyxDQUFDLFlBQVksRUFBRSxVQUFDQyxDQUE0QixFQUFLO0lBQzlELElBQU1DLFFBQVEsR0FBR0QsQ0FBQyxDQUFDRSxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLElBQU1DLFNBQVMsR0FBR0osQ0FBQyxDQUFDRSxNQUFNLENBQUNHLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ04sUUFBUSxFQUFFRyxTQUFTLENBQUM7RUFDbEMsQ0FBQyxDQUFDO0VBRUYsSUFBTUksYUFBYSxHQUFHLElBQUlDLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDQyxNQUFNLENBQUNDLE9BQU8sQ0FBQztJQUNuREMsVUFBVSxFQUFFLFNBQVM7SUFDckJDLFVBQVUsRUFBRTtFQUNkLENBQUMsQ0FBQzs7RUFFRjtFQUNBLElBQU1ILE1BQU0sR0FBRyxJQUFJRixNQUFNLENBQUNDLElBQUksQ0FBQ0MsTUFBTSxDQUFDSSxxQkFBcUIsQ0FBQztJQUMxREMsUUFBUSxFQUFFO01BQUViLEdBQUcsRUFBRUYsUUFBUTtNQUFFSSxHQUFHLEVBQUVEO0lBQVUsQ0FBQztJQUFFO0lBQzdDTixHQUFHLEVBQUhBLEdBQUc7SUFDSG1CLE9BQU8sRUFBRVQsYUFBYSxDQUFDVTtFQUN6QixDQUFDLENBQUM7RUFDRjtFQUNBLElBQU1DLGFBQWEsR0FDakIscURBQXFELEdBQ3JELFdBQVcsR0FDWEMsT0FBTyxHQUNQLHNCQUFzQixHQUN0Qm5CLFFBQVE7RUFBRztFQUNYLGFBQWEsR0FDYkcsU0FBUztFQUFHO0VBQ1osZUFBZSxHQUNmLFFBQVE7RUFFVixJQUFNaUIsVUFBVSxHQUFHLElBQUlaLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDWSxVQUFVLENBQUM7SUFDNUNMLE9BQU8sRUFBRUUsYUFBYTtJQUN0QkgsUUFBUSxFQUFFaEIsQ0FBQyxDQUFDRTtFQUNkLENBQUMsQ0FBQztFQUVGbUIsVUFBVSxDQUFDRSxJQUFJLENBQUN6QixHQUFHLEVBQUVhLE1BQU0sQ0FBQzs7RUFFNUI7RUFDQVUsVUFBVSxDQUFDdEIsV0FBVyxDQUFDLFlBQVksRUFBRSxZQUFZO0lBQy9DWSxNQUFNLENBQUNhLE1BQU0sQ0FBQyxJQUFJLENBQUM7RUFDckIsQ0FBQyxDQUFDO0VBRUYsT0FBT2IsTUFBTTtBQUNmLENBQUM7QUFBQWMsRUFBQSxHQTNDWTdCLG9CQUFvQjtBQUFBLElBQUE2QixFQUFBO0FBQUFDLFlBQUEsQ0FBQUQsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvdXRpbHMvUmlnaHRDbGlja01hcEhhbmRsZXIudHM/NWE3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgUmlnaHRDbGlja01hcEhhbmRsZXJQcm9wcyB7XG4gIG1hcDogZ29vZ2xlLm1hcHMuTWFwXG59XG5cbmV4cG9ydCBjb25zdCBSaWdodENsaWNrTWFwSGFuZGxlciA9ICh7IG1hcCB9OiBSaWdodENsaWNrTWFwSGFuZGxlclByb3BzKSA9PiB7XG4gIG1hcC5hZGRMaXN0ZW5lcigncmlnaHRjbGljaycsIChlOiBnb29nbGUubWFwcy5NYXBNb3VzZUV2ZW50KSA9PiB7XG4gICAgY29uc3QgbGF0aXR1ZGUgPSBlLmxhdExuZy5sYXQoKVxuICAgIGNvbnN0IGxvbmdpdHVkZSA9IGUubGF0TG5nLmxuZygpXG4gICAgY29uc29sZS5sb2cobGF0aXR1ZGUsIGxvbmdpdHVkZSlcbiAgfSlcblxuICBjb25zdCBwaW5WaWV3U2NhbGVkID0gbmV3IGdvb2dsZS5tYXBzLm1hcmtlci5QaW5WaWV3KHtcbiAgICBiYWNrZ3JvdW5kOiAnIzRDQUY1MCcsXG4gICAgZ2x5cGhDb2xvcjogJ3doaXRlJyxcbiAgfSlcblxuICAvLyDjg57jg7zjgqvjg7zjgpLkvZzmiJDjgZfjgabjg57jg4Pjg5fjgavov73liqBcbiAgY29uc3QgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLm1hcmtlci5BZHZhbmNlZE1hcmtlckVsZW1lbnQoe1xuICAgIHBvc2l0aW9uOiB7IGxhdDogbGF0aXR1ZGUsIGxuZzogbG9uZ2l0dWRlIH0sIC8vIOabtOaWsOOBleOCjOOBn+WkieaVsOWQjeOCkuS9v+eUqFxuICAgIG1hcCxcbiAgICBjb250ZW50OiBwaW5WaWV3U2NhbGVkLmVsZW1lbnQsXG4gIH0pXG4gIC8vIOeZu+mMsueUu+mdouOBuOOBruODquODs+OCr+OCkuWQq+OCgOWQueOBjeWHuuOBl+OCkueUn+aIkFxuICBjb25zdCBjb250ZW50U3RyaW5nID1cbiAgICAnPGRpdiBpZD1cImluZm9XaW5kb3dDb250ZW50XCIgc3R5bGU9XCJwYWRkaW5nOiAxNXB4O1wiPicgK1xuICAgICc8YSBocmVmPVwiJyArXG4gICAgYmFzZVVybCArXG4gICAgJy9wb3N0cy9uZXc/bGF0aXR1ZGU9JyArXG4gICAgbGF0aXR1ZGUgKyAvLyDjgZPjgZPjgpIgYGxhdGAg44GL44KJIGBsYXRpdHVkZWAg44Gr5L+u5q2jXG4gICAgJyZsb25naXR1ZGU9JyArXG4gICAgbG9uZ2l0dWRlICsgLy8g44GT44GT44KSIGBsbmdgIOOBi+OCiSBgbG9uZ2l0dWRlYCDjgavkv67mraNcbiAgICAnXCI+44GT44GT44KS55m76Yyy44GZ44KLPC9hPicgK1xuICAgICc8L2Rpdj4nXG5cbiAgY29uc3QgaW5mb3dpbmRvdyA9IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHtcbiAgICBjb250ZW50OiBjb250ZW50U3RyaW5nLFxuICAgIHBvc2l0aW9uOiBlLmxhdExuZyxcbiAgfSlcblxuICBpbmZvd2luZG93Lm9wZW4obWFwLCBtYXJrZXIpXG5cbiAgLy8g5oOF5aCx44Km44Kj44Oz44OJ44Km44Gu6ZaJ44GY44KL44Oc44K/44Oz44GM44Kv44Oq44OD44Kv44GV44KM44Gf44KJ44Oe44O844Kr44O844KS5YmK6ZmkXG4gIGluZm93aW5kb3cuYWRkTGlzdGVuZXIoJ2Nsb3NlY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgbWFya2VyLnNldE1hcChudWxsKVxuICB9KVxuXG4gIHJldHVybiBtYXJrZXJcbn1cbiJdLCJuYW1lcyI6WyJSaWdodENsaWNrTWFwSGFuZGxlciIsIl9yZWYiLCJtYXAiLCJhZGRMaXN0ZW5lciIsImUiLCJsYXRpdHVkZSIsImxhdExuZyIsImxhdCIsImxvbmdpdHVkZSIsImxuZyIsImNvbnNvbGUiLCJsb2ciLCJwaW5WaWV3U2NhbGVkIiwiZ29vZ2xlIiwibWFwcyIsIm1hcmtlciIsIlBpblZpZXciLCJiYWNrZ3JvdW5kIiwiZ2x5cGhDb2xvciIsIkFkdmFuY2VkTWFya2VyRWxlbWVudCIsInBvc2l0aW9uIiwiY29udGVudCIsImVsZW1lbnQiLCJjb250ZW50U3RyaW5nIiwiYmFzZVVybCIsImluZm93aW5kb3ciLCJJbmZvV2luZG93Iiwib3BlbiIsInNldE1hcCIsIl9jIiwiJFJlZnJlc2hSZWckIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/RightClickMapHandler.ts\n"));

/***/ })

});